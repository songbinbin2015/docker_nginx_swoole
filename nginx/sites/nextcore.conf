server {

    listen 8090 default_server;
    listen [::]:8090 default_server ipv6only=on;

    server_name nextcore;
    root /var/www/html/nextcore/public/;
    index index.php index.html index.htm;

    location / {
         try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri /index.php =404;
        fastcgi_pass php-upstream;
        fastcgi_index index.php;
		fastcgi_connect_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_buffers 8 128k; 
        fastcgi_buffer_size 256k;
		set $path_info "";
		set $real_script_name $fastcgi_script_name;
		if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {
			set $real_script_name $1;
			set $path_info $2;
		}
        fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;
		fastcgi_param PATH_INFO $path_info;
        include fastcgi_params;
    }

    location ~ /\.ht {
        deny all;
    }
}
server{
    listen 8089;
    server_name  product_analyze;
    root /var/www/html/product_analyze/public;

    location / {
        index  index.php index.html index.htm;
         #如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
         if (!-e $request_filename)
         {
            #地址作为将参数rewrite到index.php上。
            rewrite ^/(.*)$ /index.php?s=$1;
            #若是子目录则使用下面这句，将subdir改成目录名称即可。
            #rewrite ^/subdir/(.*)$ /subdir/index.php?s=$1;
         }
    }

	location /api/ {
        index  index.php index.html index.htm;
         #如果请求既不是一个文件，也不是一个目录，则执行一下重写规则
         if (!-e $request_filename)
         {
            #地址作为将参数rewrite到index.php上。
            #rewrite ^/(.*)$ /index.php?s=$1;
            #若是子目录则使用下面这句，将subdir改成目录名称即可。
            rewrite ^/api/(.*)$ /api/index.php?s=$1;
         }
    }

	location ~* ^\/upload\/.+\.(html|php)$ {
		return 404;
	}

	location ~* ^\/plugins\/.+\.(html|php)$ {
		return 404;
	}

	location ~* ^\/themes\/.+\.(html|php)$ {
		return 404;
	}

    #proxy the php scripts to php-fpm
    location ~ \.php {
            include fastcgi_params;
            ##pathinfo支持start
            #定义变量 $path_info ，用于存放pathinfo信息
            set $path_info "";
            #定义变量 $real_script_name，用于存放真实地址
            set $real_script_name $fastcgi_script_name;
            #如果地址与引号内的正则表达式匹配
            if ($fastcgi_script_name ~ "^(.+?\.php)(/.+)$") {
                    #将文件地址赋值给变量 $real_script_name
                    set $real_script_name $1;
                    #将文件地址后的参数赋值给变量 $path_info
                    set $path_info $2;
            }
            #配置fastcgi的一些参数
            fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;
            fastcgi_param SCRIPT_NAME $real_script_name;
            fastcgi_param PATH_INFO $path_info;
            ###pathinfo支持end
        fastcgi_intercept_errors on;

        fastcgi_pass   php-upstream;
        # fastcgi_pass 如果是 sock形式，可能是下面的配置
        # fastcgi_pass unix:/tmp/php-cgi.sock
    }
}





